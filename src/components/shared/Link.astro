---
import type { HTMLAttributes } from "astro/types";

type Props = HTMLAttributes<"a"> & {
  label: string;
  isUnderline?: boolean;
  icon?: string;
};

const { label, isUnderline, icon, ...props } = Astro.props;

// Icon SVG map
const icons: Record<string, string> = {
  github: `<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"></path></svg>`,
  linkedin: `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M8 11v5"/><path d="M8 8v.01"/><path d="M12 16v-5"/><path d="M16 16v-3a2 2 0 1 0 -4 0"/><rect x="3" y="3" width="18" height="18" rx="2"/></svg>`,
};
---

<a
  href={props.href}
  class:list={{
    ["hover:text-neutral-100 cursor-pointer inline-flex items-center gap-1.5 transition-colors"]: true,
    ["underline decoration-dashed underline-offset-8"]: isUnderline,
  }}
  {...props}
  rel="noreferrer"
  target="_blank"
>
  {icon && icons[icon] && (
    <span class="inline-flex" set:html={icons[icon]} />
  )}
  {label}
  <span class="sr-only">{label} link</span>
</a>
